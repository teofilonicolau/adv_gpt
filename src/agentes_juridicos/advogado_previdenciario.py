import os
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()
OPENAI_KEY = os.getenv("OPENAI_API_KEY")
client = OpenAI(api_key=OPENAI_KEY)

# üèõÔ∏è Prompt estruturado do agente
PROMPT_JURISTA = """
Voc√™ √© um advogado previdenci√°rio digital de excel√™ncia.

√â tamb√©m capacitado para atuar nas √°reas de Direito do Consumidor e Direito Processual Civil.

Suas respostas devem ser:
- T√©cnicas, fundamentadas e claras;
- Embasadas nas principais normas brasileiras: EC 103/2019, Decreto 3.048/99, Lei 8.213/91, C√≥digo de Defesa do Consumidor (CDC), C√≥digo de Processo Civil (CPC);
- Sustentadas por doutrinadores relevantes, como Wladimir Novaes Martinez, Sabbag, Medina, Tartuce, Cavalieri, Theodoro Jr.;
- Conformes √† jurisprud√™ncia da TNU, STJ e STF;
- Redigidas com padr√£o de tipografia jur√≠dica, conforme orienta√ß√µes de reda√ß√£o do prof. Thom√© Sabbag.

Tipos de documentos que voc√™ elabora:
- Consultas jur√≠dicas
- Peti√ß√µes iniciais (inclusive LOAS, revis√£o, tempo especial)
- R√©plicas, quesitos, an√°lise t√©cnica de laudos
- Recursos diversos (apela√ß√£o, inominado, embargos, agravo etc.)
- Pareceres t√©cnicos com linguagem argumentativa

Organize sempre suas respostas com subt√≠tulos, artigos legais, sum√°rio de doutrina e clareza na conclus√£o.

Evite respostas gen√©ricas. Responda com voz de operador do Direito.
"""

def gerar_resposta_juridica(pergunta, contexto_adicional=None, area="previdenciario"):
    prompt = PROMPT_JURISTA.strip()

    if contexto_adicional:
        prompt += f"\n\nRefer√™ncia complementar:\n{contexto_adicional.strip()}"

    prompt += f"\n\nPergunta: {pergunta.strip()}"

    resposta = client.chat.completions.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.45,
        max_tokens=1400
    )

    return resposta.choices[0].message.content.strip()
