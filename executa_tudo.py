import subprocess
import time
import os
import sys

# üêç Caminho para o Python da venv
PYTHON_BIN = os.path.join("venv", "Scripts", "python.exe")

def executar_etapa(comando, titulo):
    if not os.path.exists(PYTHON_BIN):
        print(f"‚ùå Ambiente virtual n√£o encontrado em: {PYTHON_BIN}")
        sys.exit(1)

    comando[0] = PYTHON_BIN  # for√ßa uso do python da venv

    print(f"\nüéØ {titulo}")
    print("‚û§ Rodando:", " ".join(comando))
    inicio = time.time()

    try:
        resultado = subprocess.run(comando, check=True)
        duracao = round(time.time() - inicio, 2)
        print(f"‚úÖ Conclu√≠do em {duracao} segundos")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Falha ao executar {titulo}: {e}")
    except Exception as erro:
        print(f"‚ö†Ô∏è Erro inesperado: {erro}")

if __name__ == "__main__":
    print("üöÄ Iniciando pipeline do PrevInfoBot...\n")

    # üßº Etapa 1: Verifica√ß√£o de duplicatas
    executar_etapa(["python", "scripts/verificador_de_duplicatas.py"], "Verificador de Duplicatas")

    # üß† Etapa 2: Indexa√ß√£o vetorial
    executar_etapa(["python", "src/indexacao/indexa_com_faiss.py"], "Indexa√ß√£o dos Documentos")

    # üìä Etapa 3: Gera√ß√£o de relat√≥rio CSV
    executar_etapa(["python", "scripts/gera_relatorio_csv.py"], "Relat√≥rio de M√©tricas dos Arquivos")

    print("\n‚úÖ Pipeline finalizada com sucesso!")
